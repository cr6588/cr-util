    /**
     * 查询交接单列表
     * @param param 查询条件
     * @param pager 分页条件，无需分页null
     * @return
     */
    List<PubHandover> getPubHandoverList(Map<String, Object> param, PagerInfo pager);

    /**
     * 查询交接单
     * @param param 查询条件
     * @return
     */
    PubHandover getPubHandover(Map<String, Object> param);

    /**
     * 增加交接单
     * @param pubHandover 交接单
     * @return
     */
    Long savePubHandover(PubHandover pubHandover);

    /**
     * 批量增加交接单
     * @param pubHandover 交接单
     * @return
     */
    void batchSavePubHandover(List<PubHandover> list);

    /**
     * 修改交接单
     * @param pubHandover 交接单
     */
    void updatePubHandover(PubHandover pubHandover);

    /**
     * 修改交接单，非空字段
     * @param pubHandover
     */
    void updatePubHandoverNoNull(PubHandover pubHandover);

    /**
     * 删除交接单
     * @param id
     */
    void deletePubHandover(Map<String, Object> param);

    @Autowired
    private HandoverDao handoverDao;

    @Override
    public List<PubHandover> getPubHandoverList(Map<String, Object> param, PagerInfo pager) {
        return handoverDao.getPubHandoverList(param, pager);
    }

    @Override
    public PubHandover getPubHandover(Map<String, Object> param) {
        return handoverDao.getPubHandover(param);
    }

    @Override
    public Long savePubHandover(PubHandover pubHandover) {
        if (!PlatformUtils.greaterThanZero(pubHandover.getId())) {
            pubHandover.setId(IdGeneratorUtils.generateId());
        }
        handoverDao.savePubHandover(pubHandover);
        return pubHandover.getId();
    }

    @Override
    public void batchSavePubHandover(List<PubHandover> list) {
        if (PlatformUtils.isEmpty(list)) {
            return;
        }
        list.forEach(r -> {
            if (!PlatformUtils.greaterThanZero(r.getId())) {
                r.setId(IdGeneratorUtils.generateId());
            }
        });
        handoverDao.batchSavePubHandover(list);
    }

    @Override
    public void updatePubHandover(PubHandover pubHandover) {
        handoverDao.updatePubHandover(pubHandover);
    }

    @Override
    public void updatePubHandoverNoNull(PubHandover pubHandover) {
        handoverDao.updatePubHandoverNoNull(pubHandover);
    }

    @Override
    public void deletePubHandover(Map<String, Object> param) {
        handoverDao.deletePubHandover(param);
    }

