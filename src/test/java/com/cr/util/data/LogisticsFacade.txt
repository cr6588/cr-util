    /**
     * 查询交接单列表
     * @param param 查询条件
     * @param pager 分页条件，无需分页null
     * @return
     */
    ResultParamVo<List<PubHandover>, PagerInfo> getPubHandoverList(Map<String, Object> param, PagerInfo pager);

    /**
     * 查询交接单
     * @param param 查询条件
     * @return
     */
    PubHandover getPubHandover(Map<String, Object> param);

    /**
     * 增加交接单
     * @param pubHandover 交接单
     */
    Long savePubHandover(PubHandover pubHandover);

    /**
     * 批量增加交接单
     * @param pubHandover 交接单
     * @return
     */
    void batchSavePubHandover(List<PubHandover> list);

    /**
     * 修改交接单
     * @param pubHandover 交接单
     */
    void updatePubHandover(PubHandover pubHandover);

    /**
     * 修改交接单，非空字段
     * @param pubHandover
     */
    void updatePubHandoverNoNull(PubHandover pubHandover);

    /**
     * 删除交接单
     * @param id
     */
    void deletePubHandover(Long id, Long comId);

    @Autowired
    private HandoverService handoverService;

    @Override
    public ResultParamVo<List<PubHandover>, PagerInfo> getPubHandoverList(Map<String, Object> param,
        PagerInfo pager) {
        List<PubHandover> list = handoverService.getPubHandoverList(param, pager);
        return new ResultParamVo<>(list, pager);
    }

    @Override
    public Long savePubHandover(PubHandover pubHandover) {
        return handoverService.savePubHandover(pubHandover);
    }

    @Override
    public void batchSavePubHandover(List<PubHandover> list) {
        handoverService.batchSavePubHandover(list);
    }

    @Override
    public void updatePubHandover(PubHandover pubHandover) {
        handoverService.updatePubHandover(pubHandover);
    }

    @Override
    public void updatePubHandoverNoNull(PubHandover pubHandover) {
        handoverService.updatePubHandoverNoNull(pubHandover);
    }

    @Override
    public void deletePubHandover(Long id, Long comId) {
        if(id == null || comId == null) {
            return;
        }
        Map<String, Object> param = new HashMap<>();
        param.put(ConstBusiness.COM_ID, comId);
        param.put(ConstBusiness.ID, id);
        handoverService.deletePubHandover(param);
    }

    @Override
    public PubHandover getPubHandover(Map<String, Object> param) {
        return handoverService.getPubHandover(param);
    }
