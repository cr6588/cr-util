    /**
     * 查询物流公司列表
     * @param param 查询条件
     * @param pager 分页条件，无需分页null
     * @return
     */
    ResultParamVo<List<PubLogisticsCompany>, PagerInfo> getPubLogisticsCompanyList(Map<String, Object> param, PagerInfo pager);

    /**
     * 查询物流公司
     * @param param 查询条件
     * @return
     */
    PubLogisticsCompany getPubLogisticsCompany(Map<String, Object> param);

    /**
     * 增加物流公司
     * @param pubLogisticsCompany 物流公司
     */
    void savePubLogisticsCompany(PubLogisticsCompany pubLogisticsCompany);

    /**
     * 修改物流公司
     * @param pubLogisticsCompany 物流公司
     */
    void updatePubLogisticsCompany(PubLogisticsCompany pubLogisticsCompany);

    /**
     * 删除物流公司
     * @param id
     */
    void deletePubLogisticsCompany(Long id, Long comId);

    @Override
    public ResultParamVo<List<PubLogisticsCompany>, PagerInfo> getPubLogisticsCompanyList(Map<String, Object> param,
        PagerInfo pager) {
        List<PubLogisticsCompany> list = logisticsSer.getPubLogisticsCompanyList(param, pager);
        return new ResultParamVo<>(list, pager);
    }

    @Override
    public PubLogisticsCompany getPubLogisticsCompany(Long comId, Long id) {
        return logisticsSer.getPubLogisticsCompany(comId, id);
    }

    @Override
    public void savePubLogisticsCompany(PubLogisticsCompany pubLogisticsCompany) {
        logisticsSer.savePubLogisticsCompany(pubLogisticsCompany);
        logFacade.addSaveLog(pubLogisticsCompany);
    }

    @Override
    public void updatePubLogisticsCompany(PubLogisticsCompany pubLogisticsCompany) {
        PubLogisticsCompany oldCompany = getPubLogisticsCompany(pubLogisticsCompany.getComId(),
            pubLogisticsCompany.getId());
        logisticsSer.updatePubLogisticsCompany(pubLogisticsCompany);
        logFacade.addUpdateLog(oldCompany, pubLogisticsCompany);
    }

    @Override
    public void deletePubLogisticsCompany(Long id, Long comId, List<PubLogisticsChannel> channels) {
        PubLogisticsCompany oldCompany = getPubLogisticsCompany(comId, id);
        logisticsSer.deletePubLogisticsCompany(comId, id);
        if (PlatformUtils.isNotEmpty(channels)) {
            for (PubLogisticsChannel channel : channels) {
                isNotChannelUsed(comId, channel.getId());
                logisticsSer.deletePubLogisticsChannel(comId, channel.getId());
            }
            for (PubLogisticsChannel channel : channels) {
                logFacade.addDeleteLog(channel);
            }
        }
        logFacade.addDeleteLog(oldCompany);
    }



    @Override
    public PubLogisticsCompany getPubLogisticsCompany(Map<String, Object> param) {
        return logisticsSer.getPubLogisticsCompany(param);
    }
